//
//  AuthViewController.swift
//  iHAQ
//
//  Created by Evgeny Ivanov on 25.06.2020.
//  Copyright (c) 2020 r9g. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Spring
import Firebase
import GoogleSignIn

class AuthViewController: UIViewController {

    // MARK: Object lifecycle

    @IBOutlet var loginTextfield: UITextField!
    @IBOutlet var passwordTextfield: UITextField!
    @IBOutlet var loginButton: UIButton!
    @IBOutlet var registrateBUtton: UIButton!
    @IBOutlet weak var signInButton: GIDSignInButton!

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {

    }

    @IBAction func loginTap(_ sender: Any) {
        output.log(loginTextfield.text!, passwordTextfield.text!)
    }
    @IBAction func registrateTap(_ sender: Any) {
        output.reg(loginTextfield.text!, passwordTextfield.text!)
    }

    // MARK: View lifecycle

    struct Output {
        var google: (String) -> Void
        var reg: (_ login: String, _ pass: String) -> Void
        var log: (_ login: String, _ pass: String) -> Void
    }
    var output: Output!


    override func viewDidLoad() {
        super.viewDidLoad()

        loginTextfield.delegate = self
        passwordTextfield.delegate = self
        setuoGoogle()
        GIDSignIn.sharedInstance()?.presentingViewController = self
        GIDSignIn.sharedInstance().signIn()
    }

    // MARK: Actions
    func setuoGoogle() {
        GIDSignIn.sharedInstance().delegate = self
    }
    private let ulegalSet = CharacterSet(charactersIn: "^|?\"")
}

extension AuthViewController: GIDSignInDelegate {
    func sign(_ signIn: GIDSignIn!, didSignInFor user: GIDGoogleUser!, withError error: Error?) {
        // ...
        if let error = error {
            print(error.localizedDescription)
            return
        }

        guard let authentication = user.authentication else { return }
//        let credential = GoogleAuthProvider.credential(withIDToken: authentication.idToken,
//                                                       accessToken: authentication.accessToken)
        output.google(authentication.idToken)

    }

    func sign(_ signIn: GIDSignIn!, didDisconnectWith user: GIDGoogleUser!, withError error: Error!) {
        // Perform any operations when the user disconnects from app here.
        // ...
    }


}
extension AuthViewController: UITextFieldDelegate {
    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {
        let subString = (textField.text!.capitalized as NSString).replacingCharacters(in: range, with: string)
        if subString.contains(from: ulegalSet) {
            fatalError("Bug unlegalSet")
        }
        return true
    }
    func textFieldShouldBeginEditing(_ textField: UITextField) -> Bool {
        true
    }
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        textField.resignFirstResponder()
        return true
    }
}
